{"nbformat":4,"nbformat_minor":0,"metadata":{"colab":{"provenance":[{"file_id":"1Kqni6SN61QHfa4dvY86pI2BMHe1eRkG9","timestamp":1757342565747}]},"kernelspec":{"name":"python3","display_name":"Python 3"},"language_info":{"name":"python"}},"cells":[{"cell_type":"code","execution_count":4,"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"2RkXg7fQXgaD","executionInfo":{"status":"ok","timestamp":1757343885451,"user_tz":-420,"elapsed":5739,"user":{"displayName":"Maureen Fadhliphya","userId":"15534252903059071134"}},"outputId":"1f9695a1-bec7-4aa3-e641-355687eb9ef8"},"outputs":[{"output_type":"stream","name":"stderr","text":["[nltk_data] Downloading package stopwords to /root/nltk_data...\n","[nltk_data]   Unzipping corpora/stopwords.zip.\n","[nltk_data] Downloading package punkt to /root/nltk_data...\n","[nltk_data]   Package punkt is already up-to-date!\n","[nltk_data] Downloading package punkt_tab to /root/nltk_data...\n","[nltk_data]   Unzipping tokenizers/punkt_tab.zip.\n"]},{"output_type":"stream","name":"stdout","text":["Kolom tersedia: ['content', 'normalized', 'review_after_stopwords', 'wordCount', 'wordCount_after_stopwords']\n","   review_after_stopwords       stemmed_porter   stemmed_lancaster\n","0      unable book ticket    unabl book ticket      un book ticket\n","1          beautiful love          beauti love          beauty lov\n","2         easy use useful         easi use use          easy us us\n","3               fantastic              fantast             fantast\n","4  best easy use navigate  best easi use navig  best easy us navig\n","[OK] File hasil stemming disimpan: emirates_reviews_stemmed.csv\n"]}],"source":["# === 1. Import & download resource ===\n","import pandas as pd\n","import nltk\n","from nltk.stem import PorterStemmer, LancasterStemmer\n","from nltk.tokenize import word_tokenize\n","\n","# download semua resource penting\n","nltk.download('stopwords')\n","nltk.download('punkt')\n","nltk.download('punkt_tab')\n","\n","# === 2. Load file hasil preprocessing ===\n","df_stop = pd.read_csv(\"emirates_reviews_stopwords.csv\")\n","\n","# pastikan nama kolom benar\n","print(\"Kolom tersedia:\", df_stop.columns.tolist())\n","\n","# ambil kolom teks bersih (hasil preprocessing tanpa stopwords)\n","TEXT_COL = \"review_after_stopwords\"   # sesuai file kamu\n","\n","# === 3. Inisialisasi stemmer ===\n","porter = PorterStemmer()\n","lancaster = LancasterStemmer()\n","\n","# === 4. Fungsi stemming ===\n","def stem_words(text, method=\"porter\"):\n","    words = word_tokenize(str(text))\n","    if method == \"porter\":\n","        return \" \".join([porter.stem(w) for w in words])\n","    elif method == \"lancaster\":\n","        return \" \".join([lancaster.stem(w) for w in words])\n","    else:\n","        return text\n","\n","# === 5. Terapkan ke DataFrame ===\n","df_stop[\"stemmed_porter\"]    = df_stop[TEXT_COL].fillna(\"\").apply(lambda x: stem_words(x, \"porter\"))\n","df_stop[\"stemmed_lancaster\"] = df_stop[TEXT_COL].fillna(\"\").apply(lambda x: stem_words(x, \"lancaster\"))\n","\n","# === 6. Preview hasil ===\n","print(df_stop[[TEXT_COL, \"stemmed_porter\", \"stemmed_lancaster\"]].head())\n","\n","# === 7. (Opsional) Simpan hasil ke CSV baru ===\n","df_stop.to_csv(\"emirates_reviews_stemmed.csv\", index=False)\n","print(\"[OK] File hasil stemming disimpan: emirates_reviews_stemmed.csv\")\n"]}]}